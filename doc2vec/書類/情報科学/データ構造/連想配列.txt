
連想配列
連想配列（れんそうはいれつ、英語: associative array）とは、コンピュータプログラミングにおいて、添え字にスカラー数値以外のデータ型(文字列型等)も使用できる配列である。抽象データ型のひとつ。連想リスト、連想コンテナ、辞書（あるいはカタカナでディクショナリ 英語: dictionary）、ハッシュ（英語: hash）、マップ（英語: map）とも呼ばれる。
歴史的には、最初に LISP の連想リストとして広く認知された。その後、SNOBOL で table として、AWK で連想配列として実装したことで、その潜在能力がさらに広く知られるようになった。現在、Ruby など一部の言語では、添え字にはどのようなデータでも使えるものもある。
目次  [非表示] 
1	概要
2	データ構造
3	よく用意される命令
4	連想配列を標準で提供する主な言語
5	脚注
6	関連項目
概要[編集]
プログラミングにおける単純な配列は、特定のアドレスからのオフセット（ずれ）をインデックスとして、アドレスとオフセットによって目的の値を得る。これに対し連想配列では、要素とそれを紐付けできるような値（キーと呼ぶ）のペアで表され、キーによって目的の値を求める。辞書やディクショナリという呼び方は、要素を本文、キーを見出しになぞらえたものと言える。ハッシュはハッシュテーブルによって実装されることによる。
データ構造[編集]
連想配列の実装に使われるデータ構造としては、主に平衡2分探索木（赤黒木やAVL木など）やハッシュテーブルがある。ほかにはB木や連想リスト、トライ木、基数木などが利用されることもある。純粋な連想配列においてはキーの重複があってはならない。マップ（連想配列）を拡張したマルチマップはキーが重複したデータも上書きせずに保持できるデータ構造である。
連想配列を一般化したデータ構造のひとつにマルチマップ（英語: Multimap）があり、一つのキーに対して複数の値を格納することができる[1]。また別の一般化である双方向マップ(英語: Bidirectional map、Bidimap、double ordered map)はバインディング操作を双方向で行う（キーと値に全単射関係をもたせる）データコンテナである。双方向マップの値それぞれが重複のないキーに関連付けられなければならない。キーを引数に取る通常の連想配列におけるlookup操作の他に値を引数にとるlookup操作が追加され、この操作は引数として与えられた値に関連付けられたキーを検索する。
よく用意される命令[編集]
純粋な連想配列でのキー-値間の参照をバインディング（またはバインドとも）と呼ぶ。「バインディング」という語は新たな参照を作る過程に対しても用いられる。
しばしば定義される操作は以下のようなものが挙げられる:[2][3]
Add or insert（追加）: 新しい {\displaystyle (key,value)} (key,value)の対をコレクションに追加し、キーと値の間への新たな参照を追加する。この操作の引数はキーとそれに関連付けられる値である。
Reassign or replace（置換）: 既存の {\displaystyle (key,value)} (key,value)対の値を書き換え、キーからの古い参照を新たな値への参照に置き換える。引数はinsertを行った時のキーと新たな値である。
Remove or delete（削除）: {\displaystyle (key,value)} (key,value)対をコレクションから削除し、キーから値への参照を消去する。引数はコレクションから削除するキーのみ。
Lookup or get（検索）: キーに束縛されている値を取り出す。引数はキーであり、キー束縛された値が戻り値となる。もし値が見つからなければ連想配列の実装の一部では例外をスローする。
また、連想配列はここで上げた以外の操作も含む。それは例えばキーの関連付けの数を特定したりすべてのキーを調べるためのイテレータを作成したりといったものである。このイテレータによって得られる参照の順序はしばしば不定となる。
連想配列を標準で提供する主な言語[編集]
AWK
C++ — 標準ライブラリのクラス std::map として提供されている。これはハッシュではなく二分木により実装されている。ハッシュを使いた std::unordered_map も提供される。
D言語
ECMAScript (JavaScript) - すべてのオブジェクトが、文字列が添え字の連想配列として扱われる。MapとWeakMap型だと添え字を任意のオブジェクトにすることができる。
Go — map[keytype]valtype 型
korn
Icon
Java — Java Platform, Standard Edition標準パッケージのMap, HashMap, TreeMap, LinkedHashMap, Hashtable で提供。その他 Apache Commons Collections などでも提供。
LISP — キーとデータで構成された cons セル[4]のリストを連想配列として（car部をキーにcdr部をデータ、またはその逆）として使う関数（assoc, rassoc）が提供されている。
Lua
.NET Framework - System.Collections.Hashtable, System.Collections.Specialized.ListDictionary, System.Collections.Specialized.HybridDictionary, System.Collections.Generic.Dictionaryにて提供。(ただし Dictionary は CLR 2.0 以降)
PL/SQL — 結合配列 (Oracle Database 9i 以降)
PHP - 配列と連想配列の区別がない
Python — 「辞書型 (dictionary)」という名前で呼ばれる
Perl — %ではじまる変数が連想配列。要素には$hash{$key}としてアクセスする(通常の配列は@で宣言し、要素へは$array[$index]としてアクセス)。同言語で連想配列を(その実装から)「ハッシュ」と呼び始めたことから、「ハッシュ」が連想配列の別名として定着した。
REXX
Ruby — 組み込みのクラス Hash で提供
Smalltalk
SNOBOL
Swift
Visual Basic
Visual Basic for Applications
脚注[編集]
^ Goodrich & Tamassia (2006), pp. 389–397.
^ Goodrich, Michael T.; Tamassia, Roberto (2006), “9.1 The Map Abstract Data Type”, Data Structures & Algorithms in Java (4th ed.), Wiley, pp. 368–371.
^ Mehlhorn, Kurt; Sanders, Peter (2008), “4 Hash Tables and Associative Arrays”, Algorithms and Data Structures: The Basic Toolbox, Springer, pp. 81–98.
^ car, cdrと呼ばれる二つデータが組になった、2-タプルのデータ構造
関連項目[編集]
ルックアップテーブル
メモ化
[表示]
表 話 編 歴
データ構造
[表示]
表 話 編 歴
データ型
カテゴリ: データ型
案内メニュー
ログインしていませんトーク投稿記録アカウント作成ログインページノート閲覧編集履歴表示検索

Wikipedia内を検索
表示
メインページ
コミュニティ・ポータル
最近の出来事
新しいページ
最近の更新
おまかせ表示
練習用ページ
アップロード (ウィキメディア・コモンズ)
ヘルプ
ヘルプ
井戸端
お知らせ
バグの報告
寄付
ウィキペディアに関するお問い合わせ
印刷/書き出し
ブックの新規作成
PDF 形式でダウンロード
印刷用バージョン
ツール
リンク元
関連ページの更新状況
ファイルをアップロード
特別ページ
この版への固定リンク
ページ情報
ウィキデータ項目
このページを引用
他言語版
Deutsch
English
Español
Français
한국어
Bahasa Melayu
Português
Русский
中文
他 15
リンクを編集
最終更新 2017年7月26日 (水) 04:52 （日時は個人設定で未設定ならばUTC）。
テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。
プライバシー・ポリシーウィキペディアについて免責事項開発者Cookieに関する声明モバイルビューWikimedia Foundation Powered by MediaWiki